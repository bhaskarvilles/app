name: Release

on: push
  #push:
    #branches:
      #- master

jobs:
  build:
    name: Flutter (.aab & .xarchive)
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.0'

      - name: Android Keystore
        env:
          ANDROID_SIGNER_B64: ${{ secrets.ANDROID_SIGNER_B64}}
          ANDROID_SIGNER_SECRET: ${{ secrets.ANDROID_SIGNER_SECRET }}
        run: |
          # create keystore
          echo $ANDROID_SIGNER_B64 | base64 --decode > android/android_signer.jks

          # build properties file
          printf 'storePassword=%s\nkeyPassword=%s\nkeyAlias=key\nstoreFile=../android_signer.jks' $ANDROID_SIGNER_SECRET $ANDROID_SIGNER_SECRET > android/keystore.properties

      - name: iOS Signing
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Flutter Dependencies
        run: |
          flutter pub get
          pod install --project-directory=ios/

      - name: Build App Bundle (Android)
        run: flutter build appbundle --build-number=42$GITHUB_RUN_NUMBER

      - name: Build IPA (IOS)
        run: flutter build ipa --build-number=42$GITHUB_RUN_NUMBER

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/bundle/release/*.aab,build/ios/archive/*.xcarchive"
          replacesArtifacts: false
          token: ${{ secrets.GH_TOKEN }}
          